// import 'dart:io';
// import 'package:flutter/material.dart';
// import 'package:provider/provider.dart';
// import 'package:task1/demo_folder/homescreen.dart';
// import 'package:task1/demo_folder/task.dart';
// import 'demo_folder/task_provider.dart';
// import 'package:objectbox/objectbox.dart';
// import 'demo_folder/offline_indicator.dart';
// import 'package:path_provider/path_provider.dart';
// import 'objectbox.g.dart';

// void main() async {
//   WidgetsFlutterBinding.ensureInitialized();

//   final appDocDir = await getApplicationDocumentsDirectory();
//   final storeDirectory = Directory('${appDocDir.path}/objectbox');

//   if (!await storeDirectory.exists()) {
//     await storeDirectory.create(recursive: true);
//   }

//   var objectBox = await openStore(directory: storeDirectory.path);

//   runApp(MyApp(objectBox));
// }

// class MyApp extends StatelessWidget {
//   final Store store;

//   MyApp(this.store);

//   @override
//   Widget build(BuildContext context) {
//     return ChangeNotifierProvider(
//       create: (_) => TaskProvider(store.box<Taskk>()),
//       child: MaterialApp(
//         home: Scaffold(
//           body: Stack(
//             children: [
//               HomeScreen(),
//               OfflineIndicator(),
//             ],
//           ),
//         ),
//       ),
//     );
//   }
// }

import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:provider/provider.dart';
import 'package:task1/provider/task_provider.dart';
import 'package:task1/services/task_service.dart';
import 'package:task1/sreens/task_list_screen.dart';

import 'objectbox.g.dart'; // Generated by objectbox

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  final store = await openStore();
  final taskService = TaskService(store, FirebaseFirestore.instance);

  runApp(MyApp(taskService: taskService));
}

class MyApp extends StatelessWidget {
  final TaskService taskService;

  MyApp({required this.taskService});

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) => TaskProvider(taskService: taskService),
      child: MaterialApp(
        debugShowCheckedModeBanner: false,
        title: 'Task Management App',
        theme: ThemeData(primarySwatch: Colors.blue),
        home: TaskListScreen(),
      ),
    );
  }
}
